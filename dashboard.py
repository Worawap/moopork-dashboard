import pandas as pd
import plotly.express as px
import streamlit as st

st.set_page_config(page_title="Dashboard ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏´‡∏°‡∏π‡∏Å‡∏°‡∏•", layout="wide")

# ‡∏™‡πà‡∏ß‡∏ô Upload File
uploaded_file = st.file_uploader("üì§ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ (.xlsx)", type=["xlsx"])

if uploaded_file is not None:
    sales_data = pd.read_excel(uploaded_file)
    st.success("‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
else:
    sales_data = pd.read_excel('‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ Online.xlsx')
    st.info("‚ÑπÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô")

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
st.write("üóÇÔ∏è ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå:", sales_data.columns.tolist())

date_column = None
for col in sales_data.columns:
    if '‡∏ß‡∏±‡∏ô' in col or 'date' in col.lower():
        date_column = col
        break

if date_column:
    sales_data[date_column] = pd.to_datetime(sales_data[date_column], errors='coerce', dayfirst=True)
    sales_data = sales_data.dropna(subset=[date_column])
    sales_data = sales_data.rename(columns={date_column: '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'})
else:
    st.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
    st.stop()

# ‡∏ï‡∏±‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏à‡∏£‡∏¥‡∏á ‡πÑ‡∏°‡πà‡πÄ‡∏≠‡∏≤‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á
sales_data = sales_data[~sales_data['‡∏´‡∏°‡∏ß‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤'].isin(['‡∏Ç‡∏ô‡∏™‡πà‡∏á'])]

# ‡∏£‡∏ß‡∏°‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
sales_summary = (sales_data.groupby(['‡∏£‡∏´‡∏±‡∏™‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤/‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢', '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'])
                  .agg({'‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°': 'sum'})
                  .reset_index())

# ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏ã‡πâ‡∏≥
sales_summary = sales_summary.sort_values(['‡∏£‡∏´‡∏±‡∏™‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤/‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢', '‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'])
sales_summary['diff_days'] = sales_summary.groupby('‡∏£‡∏´‡∏±‡∏™‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤/‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢')['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'].diff().dt.days

# ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‡∏ã‡πâ‡∏≥
repeat_customers = sales_summary.dropna(subset=['diff_days'])
repeat_frequency_avg = repeat_customers['diff_days'].mean()

# ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ
sales_by_region = (sales_data.groupby('‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤/‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢ 2')['‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°']
                   .sum()
                   .sort_values(ascending=False))

# ‡∏î‡∏∂‡∏á Top 10 ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
top_products = (sales_data.groupby('‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤/‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ [‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡πÄ‡∏û‡∏≤‡∏∞]')['‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°']
                .sum()
                .sort_values(ascending=False)
                .head(10))

# ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
sales_data['‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'] = sales_data['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'].dt.to_period('M')
sales_by_month = sales_data.groupby('‡πÄ‡∏î‡∏∑‡∏≠‡∏ô')['‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°'].sum().reset_index()
sales_by_month['‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'] = sales_by_month['‡πÄ‡∏î‡∏∑‡∏≠‡∏ô'].astype(str)

# Dashboard
st.title("üìä Dashboard ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ Online : ‡∏´‡∏°‡∏π‡∏Å‡∏°‡∏•")

col1, col2, col3 = st.columns(3)
col1.metric("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", f"{sales_data['‡∏£‡∏´‡∏±‡∏™‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤/‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢'].nunique()} ‡∏Ñ‡∏ô")
col2.metric("‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‡∏ã‡πâ‡∏≥", f"{repeat_customers['‡∏£‡∏´‡∏±‡∏™‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤/‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢'].nunique()} ‡∏Ñ‡∏ô")
col3.metric("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏ã‡πâ‡∏≥", f"{repeat_frequency_avg:.2f} ‡∏ß‡∏±‡∏ô" if not pd.isna(repeat_frequency_avg) else "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

st.header("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏†‡∏≤‡∏Ñ")
fig_region = px.bar(sales_by_region.reset_index(), x='‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤/‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢ 2', y='‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°', text='‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°')
st.plotly_chart(fig_region, use_container_width=True)

st.header("‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ Top 10 ‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")
st.dataframe(top_products.reset_index())
fig_top10 = px.bar(top_products.reset_index(), x='‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°', y='‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤/‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ [‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡πÄ‡∏û‡∏≤‡∏∞]', orientation='h', text='‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°')
st.plotly_chart(fig_top10, use_container_width=True)

st.header("‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (Line Chart)")
if not sales_by_month.empty:
    fig_monthly = px.line(sales_by_month, x='‡πÄ‡∏î‡∏∑‡∏≠‡∏ô', y='‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°', markers=True)
    st.plotly_chart(fig_monthly, use_container_width=True)
else:
    st.info("üìâ ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô")

st.header("Distribution ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠‡∏ã‡πâ‡∏≥ (‡∏ß‡∏±‡∏ô)")
if not repeat_customers.empty:
    fig_repeat = px.histogram(repeat_customers, x='diff_days', nbins=30, title='‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏ã‡πâ‡∏≥')
    st.plotly_chart(fig_repeat, use_container_width=True)
else:
    st.info("‚ÑπÔ∏è ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏ã‡πâ‡∏≥")

with st.expander("‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°"):
    st.dataframe(sales_data)
